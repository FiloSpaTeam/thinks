%h1.chapter-title
  How does it works?

%p.lead
  One goal. Allow to community, teams, companies, every single man, to manage a number of projects without change the methodology, acting like a pivot for project management.

%h2.chapter-subtitle
  You are integral part of the community

%p.lead
  Understand this allow you to join party.
  %blockquote
    "No Martini, no party."
%p.lead
  Maybe only an italian spot, but try to understand the concept behind.<br>
  To join party you need to know rules, date, place and maybe other informations. To join software development is the same, but more simple.
  We can use Internet as our place, we can create personal rules, we don't need dates because each of us has their own. But something is wrong with that.<br>
  We can lose each other. We can create obstacles unconsciously. We can cut connections unconsciously. We have the opportunity to fail because we are not understood.<br>
  This is not the right way. We need to have one way to <strong>work together</strong>, but <strong>work</strong> as better as we can, <strong>as we love</strong>.

%h2.chapter-subtitle
  Work together, "one way"

%p.lead
  I'm talking about a methodology that is <strong>designed for everyone</strong>, not only software developers.<br>
  There are not only developers, there are designers, biologists, sales managers too!<br>
  Maybe they can have a good idea!<br>
  But, maybe, they don't know what we are talking about, maybe they realize is too difficult to try.
  In this years i understood only one thing: each of us has a valid map to walk around the globe. There is only a difference.<br>
  They are others and not we so we reject them.

%p.lead
  They challenge ourself.<br>
  So to workaround the problem we can try to think a team like a big family, where each of us do it's own work.

%h2.chapter-subtitle
  Each of us

%p.lead
  We are part of a big family that was born just "some" years ago....
  From the beginning, to survive, we created rules.

%p.lead
  I have done this too, for us.

%p.lead
  %ol
    %li
      %p.lead
        "We love our brothers" - Respect each other
    %li
      %p.lead
        "It's difficult but not impossible." - Thinks more simple and specify your work.
    %li
      %p.lead
        "Too much or too low?" - Finds the ideal weight of your work.
    %li
      %p.lead
        "Ockham was right" - Make your goal ecological, namely make your work light for your soul.
    %li
      %p.lead
        "Be positive, for yourself" - Thinks your goal and express it in positive way.
    %li
      %p.lead
        "Don't lie yourself" - Your work need to be realistic too, no fairy tales.
    %li
      %p.lead
        "Be the active part" - Do!

%h2.chapter-subtitle
  The engine

%p.lead
  Behind all there is only passion of every single man.
  I believe that <strong>every single man can do something</strong>, and do it well. It needs only the right toolbox.

%p.lead
  Believe in yourself. Believe in your team.
  %blockquote
    "Faith and believe is the key.." - Scorpions 

%h2.chapter-subtitle
  The software

%p.lead
  I talked about the base idea behind the project.<br>
  Now talk about how software realize that.

%p.lead
  Scrum is the base Agile Methodology. For those unfamiliar with the methodology, Scrum is a methodology invented for software but applicable in any area (family, school, government...); is based on a plain team(no managers, all equal rights) and one that acts like master, the Scrum Master.<br>
  %blockquote
    So there is one that has more power.....
%p.lead
  No.<br>
  The Scrum Master lets the team to work freely from obstacles and drives it during meetings, asking questions. The Scrum Master is like the white line that separates the roadway; everyone can see it and drive good but sometimes someone can overpass it, so the line helps you to come back in the right way.

%p.lead
  There are few rules to respect. I'm not here to list them, we talk about them.<br>

%p.lead
  Scrum is board based so you need a board! And this software can be your board.<br>
  You need to analize with your team the entire project and create your first "Backlog Product" (shortly Backlog).<br>

%p.lead
  Each task that compose the Backlog, need to be thinked and express so that only one can handle and realize it, so <strong>only one worker over a task</strong>. This is essential.<br>
  Who registered the project is automatically the Scrum Master and can setup the settings for Sprints and the release date.<br>

%p.lead
  Tasks can be organized into goals.<br>
  Each goal can be seen like a mini-project.<br>
  This simplify the structure of a big project!<br>

%p.lead
  Each task has a Status:
  * Backlog -> Created but not important at the moment
  * Release -> Ok, the team thinks that this task can be important so they plans to make available in the next release
  * Sprint -> This is the right moment to do it!
  * In progress -> Someone is working over yet.
  * Done -> The task is done.

%p.lead
  During the task's status change, everyone can express it's think because can set workload and tell solutions (comments) or like others solutions.<br>
  Workload represent the weight of the task. Software analize automatically the standard deviation of team's votes so you can understand if the team is allineate.<br>

%p.lead
  Solution need to be approved to tell others that task is done. Later you need to tell other why you have choosen this specific solution.<br>
  This is one of the most important part of the software because you can create your own history about task completion!

%p.lead
  It'all. You are ready to work with this software.<br>
  Join our community and share what you think!
