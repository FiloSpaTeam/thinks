-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

.panel.panel-default.visible-xs
  %table.table.table-condensed
    %tbody
      %tr
        %td.text-center{ style: 'vertical-align: middle;' }
          %label.control-label
            Goal
          = goal_button(task)
        %td.text-center{ style: 'vertical-align: middle;' }
          .round-sm.pull-right{ :class => "bg-#{color_list_round_div(task.status.translation_code)}" }
          %label.control-label
            Status
        %td.text-center{ style: 'vertical-align: middle;' }
          %label.control-label
            Workload
          = workload_description(task)
.panel.panel-default.hidden-xs
  %ul.list-group
    %li.list-group-item
      %strong
        Count views
      %span.pull-right
        = task.impressionist_count
    %li.list-group-item
      %strong
        Release
      %span.pull-right
        - if task.release.present?
          = link_to task.release.title.truncate(20), release_path(task.release), :title => task.release.title
        - else
          = t("not_defined_yet")
    %li.list-group-item
      %strong
        Goal
      %span.pull-right
        - if task.goal.present?
          = link_to task.goal.title.truncate(20), goal_path(task.goal), :title => task.goal.title
        - else
          = t("not_defined_yet")
    %lu.list-group-item
      %strong
        Father
      %span.pull-right
        - if task.father.present?
          = link_to task.father.title.truncate(20), task_path(task.father), :title => task.father.title
        - else
          = t("not_defined_yet")
    - if task.children.count.nonzero?
      %li.list-group-item
        %strong
          Children
        %ul{style: "max-height: 100px; overflow-y: scroll;padding-left: 13px;"}
          - task.children.each do |child|
            %li
              = link_to task_path(child) do
                %small
                  = child.title
    %li.list-group-item
      %strong
        = t('tasks.status')
      %span.pull-right
        - if task.deleted?
          = t('closed')
        - else
          .round-sm.pull-left{ :class => "bg-#{color_list_round_div(task.status.translation_code)}" }
          = t("projects.tasks.#{task.status.translation_code}")
    - unless task.deleted? && task.done?
      - if task.ratings.where(thinker: current_thinker).present?
        %li.list-group-item
          %span.pull-right
            = task.ratings.where(thinker: current_thinker).first.value.to_f
          %strong=t('.your_rating')
        %li.list-group-item{style: 'border-top: none;'}
          %strong=t(:average)
          = text_field_tag :value, task.ratings.average(:value), class: 'rating', 'data-size': 'xxs', 'data-step': 1, 'data-show-caption': 'false', 'data-show-clear': 'false', 'data-display-only': true, 'data-container-class': 'pull-right', 'data-theme': 'krajee-fa'
      - else
        - if task.done?
          %li.list-group-item
            = render :partial => 'ratings/form', locals: { task: task }

  - if (scrum_master?(task.project))
    - if !task.deleted? && !task.project.suspended
      - if task.status == Status.release.first
        .panel-footer
          - if task.ready?
            = link_to "Get in Sprint!", sprint_task_path(task), :method => :put, :class => "btn btn-primary btn-block"
          - else
            %strong
              = link_to "Force in Sprint!", sprint_task_path(task), :method => :put, :class => "btn btn-warning btn-block"
              = t(".standard_deviation_too_high")
      - elsif task.status == Status.backlog.first && task.workloads.count > 0
        .panel-footer
          = link_to "Force in Release", release_task_path(task), :method => :put, :class => "btn btn-warning btn-block"
      - elsif task.status == Status.done.first
        .panel-footer
          = link_to "Back to release", release_task_path(task), :method => :put, :class => "btn btn-danger btn-block"
    - elsif task.project.suspended
      %ul.list-group
        %li.list-group-item.text-danger{ style: 'border-top: none;' }
          Development suspended

  %ul.list-group
    %li.list-group-item{ style: 'border-top: none;' }
    - if task.deleted?
      %li.list-group-item
        %strong
          Closed at
        %span.pull-right
          = task.deleted_at.to_s(:short)
      %li.list-group-item
        %strong
          Reason
        %h4
          = task.reason.try(:text)
    - else
      %li.list-group-item
        %strong
          Created at
        %span.pull-right
          = task.created_at.to_s(:short)
        %br
          %span.pull-right
            %small
              %i
                = task.thinker.name
      %li.list-group-item
        %strong
          Updated at
        %span.pull-right
          = task.updated_at.to_s(:short)
        %br
          %span.pull-right
            %small
              %i
                = task.updater.name

.panel.panel-default
  %ul.list-group
    %li.list-group-item.hidden-xs
      %strong
        = t('tasks.workload')
      %span.pull-right
        = workload_description(task)
  - if task.contributed?(current_thinker) && !task.deleted?
    .panel-footer
      - if workload_voted.nil?
        - if !task.in_progress? && !task.done?
          = form_for task, :url => judge_task_path(task), method: :put do |f|
            .form-group
              = f.label :workload, t('.define_workload'), class: "control-label"
              = f.select :workload, options_from_collection_for_select(Workload.all, :id, :description), {}, :class => "form-control"
            = f.submit t("submit"), :class => "btn btn-primary"
        - else
          %strong
            = t ".you_cannot_vote"
      - else
        .text-right{ style: 'padding-right: 15px;' }
          %strong
            = t "tasks.show.you_voted", vote: workload_voted.workload.value
  %ul.list-group.hidden-xs
    %li.list-group-item
      %strong
        = t('tasks.worker')
      - if !task.worker.nil?
        %span.pull-right{ :title => task.worker.name }
          = task.worker.name.try(:truncate, 20)
        - if (task.worker == current_thinker || scrum_master?(task.project)) && task.status != Status.done.first
          %strong
            = link_to "Give up work", give_up_task_path(task), :method => :put, :data => {confirm: "Are you sure you want to give up work?"}, :class => "btn btn-danger btn-block"
      - elsif task.status == Status.sprint.first
        - if current_thinker.working_tasks.in_progress.present?
          %h4 No one is working over this but you have yet something to do ;-P
        - elsif !task.project.started?
          %h4 The project is not started yet, wait. Your moment will come soon.
        - elsif task.workloads.size.nonzero?
          - if (task.father.present? && task.father.done?) || task.father.nil?
            = link_to "Assigns me", assign_task_path(task), :method => :put, :class => "btn btn-success btn-block"
          - else
            %h4 Complete the father task to work on this task.
        - else
          %h4 There are no opinions about this task. Share with a comment and vote!
      - else
        %h4 Actually the team didn't decide to work on. Talk about if you are interested
    %li.list-group-item
      %strong
        Operations
      = link_to task_operations_path(task), :class => "pull-right" do
        = task.operations.with_deleted.where("done is true").size.to_s + " / " + task.operations.with_deleted.size.to_s
