%li{ :role => "presentation", :class => active_filter?(:last, "filters[goal_title]") ? 'open' : '' }
  %a.dropdown-toggle{ "data-toggle" => "dropdown", :role => "button", "aria-haspopup" => "true", "aria-expanded" => "false" }
    = t(".goal")
    %span.caret
  %div.dropdown-menu.panel.panel-default{ :style => "padding: 0;" }
    .panel-heading
      .input-group
        = text_field_tag 'filters[goal_title]', filter_value(:goal_title), class: "form-control", placeholder: t("search"), autocomplete: 'off'
        %span.input-group-btn
          %button.btn.btn-default{ type: "submit" }
            %i.fa.fa-search
    %ul.list-group.scrollbar
      - goals_filter = @project.goals
      - if active_filter?(:goal_title)
        - goals_filter = goals_filter.where("lower(title) LIKE '%#{params[:filters][:goal_title].downcase.strip}%'")
      - goals_filter.each do |goal|
        = link_to url_for(url_for_filter(:goal_id, goal.id, [:goal_title, :last])), :class => "list-group-item #{ active_filter?(:goal_id, goal.id) ? 'list-group-item-info' : '' }", :remote => true do
          = highlights_searched_text(goal.title, filter_value(:goal_title))
      - if goals_filter.empty?
        %li.list-group-item.list-group-item-danger
          %strong Not found
