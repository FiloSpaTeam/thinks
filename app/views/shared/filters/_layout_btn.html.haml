-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2018, Claudio Maradonna

.dropdown{ :role => "presentation", :class => active_filter?(:last, "filters[#{local_active_filter}]") ? 'show' : '' }
  %button.btn.btn-default.dropdown-toggle.mr-1{ "data-toggle" => "dropdown", :role => "button", "aria-haspopup" => "true", "aria-expanded" => "false", :type => 'button' }
    = t("filters.#{local_filter}")
    %span.caret
  .dropdown-menu.dropdown-filters-menu.p-0{ :class => active_filter?(:last, "filters[#{local_active_filter}]") ? 'show' : '' }
    .dropdown-header.pl-3.pr-3
      .input-group
        - if active_filter?(local_filter)
          .input-group-prepend
            = link_to url_for(url_for_filter('', '', [local_filter])), :class => "btn btn-danger", :remote => true do
              %i.fa.fa-undo.text-light
        = text_field_tag "filters[#{local_active_filter}]", filter_value(local_active_filter), class: 'form-control form-control-sm', placeholder: t("search"), autocomplete: 'off'
        .input-group-append
          %button.btn.btn-outline-secondary{ type: "submit" }
            %i.fa.fa-search
    %a.dropdown-item.p-0.text-dark{ href: 'javascript:;' }
      %ul.list-group.scrollbar
        - local_results.each do |result|
          = link_to url_for(url_for_filter(local_filter, result.id, local_conflicting_filters)), :class => "rounded-0 border-right-0 border-left-0 border-bottom-0 list-group-item #{ active_filter?(local_filter, result.id) ? 'list-group-item-info' : '' }", :remote => true do
            = highlights_searched_text(result.visible_text, filter_value(local_active_search_filter))
        - if local_results.empty?
          %li.list-group-item.list-group-item-danger.rounded-0.border-right-0.border-left-0.border-bottom-0
            = t('filters.no_results')
