%li{ :role => "presentation", :class => active_filter?(:last, "filters[task_title]") ? 'open' : '' }
  %a.dropdown-toggle{ "data-toggle" => "dropdown", :role => "button", "aria-haspopup" => "true", "aria-expanded" => "false" }
    = t("filters.task")
    %span.caret
  %div.dropdown-menu.panel.panel-default{ :style => "padding: 0;" }
    .panel-heading
      .input-group
        = text_field_tag 'filters[task_title]', filter_value(:task_title), class: "form-control", placeholder: t("search"), autocomplete: 'off'
        %span.input-group-btn
          %button.btn.btn-default{ type: "submit" }
            %i.fa.fa-search
    %ul.list-group.scrollbar
      - tasks_filter = @project.tasks
      - if active_filter?(:task_title)
        - tasks_filter = tasks_filter.where("lower(title) LIKE '%#{params[:filters][:task_title].downcase.strip}%'")
      - tasks_filter.each do |task|
        = link_to url_for(url_for_filter(:task_id, task.id, [:task_title, :last])), :class => "list-group-item #{ active_filter?(:task_id, task.id) ? 'list-group-item-info' : '' }", :remote => true do
          = highlights_searched_text(task.title, filter_value(:task_title))
      - if tasks_filter.empty?
        %li.list-group-item.list-group-item-danger
          %strong Not found
