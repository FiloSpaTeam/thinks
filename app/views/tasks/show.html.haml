-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

- content_for :page_actions do
  - if (@task.thinker == current_thinker || @scrum_master) && current_thinker.ban(@task.project).nil?
    - if @task.deleted?
      %li.nav-item.ml-1
        = link_to reopen_project_task_path(@project, @task), :method => 'put', class: 'btn btn-secondary' do
          = icon('fas', 'history', t('reopen'))
      %li.nav-item.ml-1
        = link_to project_task_path(@project, @task), :method => 'delete', data: { confirm: t('are_you_sure') }, class: 'btn btn-danger' do
          = icon('fas', 'eraser', t('delete'))
    - elsif !@task.is_done?
      %li.nav-item.ml-1
        %a.btn.btn-default{ role: "button", 'data-toggle': 'modal', href: "#modal-discard-task-#{ @task.id }" }
          = icon('fas', 'trash-alt', t('discards'))
      - content_for :page_modals do
        = render partial: 'tasks/modal_discard', locals: { task: @task }
      %li.nav-item.ml-1
        = link_to edit_project_task_path(@task.project, @task), class: 'btn btn-primary' do
          = icon('fas', 'edit', t('edit'))

- content_for :page_content do
  = markdown(@task.description)
  %h5.font-weight-bold
    = t('tasks.comments')
  - if @task.project.part_of_team?(current_thinker) && current_thinker.ban(@task.project).nil? && !@task.deleted?
    = render :partial => 'comments/form', locals: { url: project_task_comments_path(@task.project, @task) }
  %table.table.table-sm.mt-2#comments-list
    %tbody
      - if @comments.empty?
        %tr.warning
          %td.text-center
            %strong
              = t('comments.no_comments')
      - @comments.each_with_index do |comment, index|
        = render partial: 'comments/comment', locals: { comment: comment, task: @task }

- content_for :page_details do
  %nav
    .nav.nav-tabs.mt-1{ role: 'tablist' }
      %a#tab-details.nav-item.nav-link.active{ 'data-toggle': 'tab', href: '#t-details', role: 'tab', 'aria-controls': 't-details', 'aria-selected': 'true' }
        = t('.details')
      %a#tab-status.nav-item.nav-link{ 'data-toggle': 'tab', href: '#t-status', role: 'tab', 'aria-controls': 't-status', 'aria-selected': 'false' }
        = t('.status')
      %a#tab-operations.nav-item.nav-link{ 'data-toggle': 'tab', href: '#t-operations', role: 'tab', 'aria-controls': 't-operations', 'aria-selected': 'false' }
        = t('.operations')
  #tab-page-details.tab-content
    #t-details.tab-pane.show.fade.active{ role: 'tabpanel', 'aria-labelledby': 'tab-details' }
      %ul.list-group.list-group-flush
        %li.list-group-item
          %small.font-weight-bold= t('activerecord.attributes.task.created_at')
          %br
          %small= @task.created_at.to_s(:long)
          %br
          %br
          %small.font-weight-bold= t('activerecord.attributes.task.updated_at')
          %br
          %small= @task.updated_at.to_s(:long)

        %li.list-group-item
          %small.font-weight-bold= t('activerecord.attributes.task.goal_id')
          %br
          - if @task.goal.present?
            = link_to @task.goal.title, project_goal_path(@project, @task.goal)
          - elsif !@task.deleted?
            = form_for [@project,@task] do |f|
              .form-group
                = f.select :goal_id, options_from_collection_for_select(@task.project.goals, 'id', 'title', @task.goal_id), {include_blank: t('select')}, :class => "form-control", disabled: @task.project.goals.empty?, onchange: 'this.form.submit()'
              = f.submit t('save'), :class => "btn btn-primary d-none"
          - else
            = t('tasks.no_goal')
        - if @task.father.present?
          %li.list-group-item
            %small.font-weight-bold= t('activerecord.attributes.task.father_id')
            %br
            = link_to @task.father.title, project_task_path(@project, @task.father)
        - if @task.children.count.nonzero?
          %li.list-group-item
            %small.font-weight-bold= t('activerecord.attributes.task.children')
            %br
            %ul.pl-0{style: "max-height: 200px;overflow-y: auto;list-style-position: inside;"}
              - @task.children.each do |child|
                %li
                  = link_to project_task_path(@project, child) do
                    %small= child.title

        - unless @task.recruitment
          - unless @task.deleted? && @task.is_done?
            - if @task.ratings.where(thinker: current_thinker).present?
              %li.list-group-item
                %span.float-right
                  = @task.ratings.where(thinker: current_thinker).first.value.to_f
                %strong=t('.your_rating')
              %li.list-group-item{style: 'border-top: none;'}
                %strong=t(:average)
                = text_field_tag :value, @task.ratings.average(:value), class: 'rating', 'data-size': 'xxs', 'data-step': 1, 'data-show-caption': 'false', 'data-show-clear': 'false', 'data-display-only': true, 'data-container-class': 'pull-right', 'data-theme': 'krajee-fa'
            - else
              - if @task.is_done?
                %li.list-group-item
                  = render partial: 'ratings/form', locals: { task: @task }
    #t-status.tab-pane.fade{ role: 'tabpanel', 'aria-labelledby': 'tab-status' }
      %ul.list-group.list-group-flush
        %li.list-group-item
          %small.font-weight-bold= t('activerecord.attributes.task.status')
          %br
          - unless @task.recruitment
            - if @task.deleted?
              = icon('fas', 'trash-alt', t('tasks.discarded'))
              %br
              %p.mt-2.small= @task.reason.text
            - else
              .round-sm.rounded.float-left.mr-1{ :class => "bg-#{color_list_round_div(@task.status.translation_code)}" }
              = t("tasks.statuses.#{@task.status.translation_code}")
          - else
            - if @task.deleted?
              .round-sm.rounded.float-left{ :class => "bg-danger" }
              = t('tasks.recruitment.refused')
            - elsif @task.is_done?
              .round-sm.rounded.float-left{ :class => "bg-success" }
              = t('tasks.recruitment.accepted')
            - else
              .round-sm.rounded.float-left{ :class => "bg-backlog" }
              = t('tasks.recruitment.waiting')
    #t-operations.tab-pane.fade{ role: 'tabpanel', 'aria-labelledby': 'tab-operations' }
      %ul.list-group.list-group-flush{ style: 'max-height: 250px;overflow-y: auto;' }
        - if @task.operations.empty?
          .list-group-item= t("tasks.no_operations")
        - first = false
        - @task.operations.each_with_index do |operation, index|
          = content_tag(:li, :class => "list-group-item #{operation.done ? 'list-group-item-success' : ''}") do
            - if (!operation.done && !first)
              - first = true
              - if current_thinker == @task.worker
                = destroy_button(operation)
                = done_button(operation)
            %strong
              = operation.serial.to_s + ': '
            = operation.text
      - if current_thinker == @task.worker
        = form_for [@task, Operation.new] do |f|
          = f.text_field :text, :class => 'form-control'
          = f.submit t(".add"), :class => "btn btn-primary"

= render partial: 'projects/layout'
