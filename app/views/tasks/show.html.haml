-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

- content_for :page_actions do
  - if (@task.thinker == current_thinker || scrum_master?(@task.project)) && current_thinker.ban(@task.project).nil?
    - if @task.deleted?
      %li
        = link_to reopen_task_path(@task), :method => 'put', title: 'Reopen' do
          = icon('history', class: 'dark-grey fa-lg')
          Reopen
      %li
        = link_to task_path(@task), :method => 'delete', title: 'Delete' do
          = icon('trash-o', class: 'dark-grey fa-lg')
          Delete
    - elsif !@task.done?
      %li
        = link_to edit_task_path(@task), title: 'Edit' do
          = icon('edit', class: 'dark-grey fa-lg')
          Edit
      %li
        = link_to task_path(@task), :method => 'delete', title: 'Close', class: 'btn-task-delete' do
          = icon('trash-o', class: 'dark-grey fa-lg')
          Close

= render partial: 'shared/projectbar', locals: { project: @task.project }

.row
  .col-sm-4
    = render partial: 'shared/taskstatuspanel', locals: { task: @task, workload_voted: @workload_voted }
  .col-sm-8
    = markdown(@task.description)
    %hr
    %h3
      Comments
    .panel.panel-default
      - if @task.project.part_of_team?(current_thinker) && current_thinker.ban(@task.project).nil? && !@task.deleted?
        .panel-heading
          = render :partial => 'comments/form'
      %table.table.table-condensed
        %tbody
          - @comments.each_with_index do |comment, index|
            %tr{ class: "#{comment.approved && !comment.reason.nil? ? 'tr-success' : ''}" }
              %td{ width: 40 }
                - if comment.thinker.avatar
                  = cl_image_tag(comment.thinker.avatar.path, { size: '40x40', crop: :thumb, gravity: :face })
                - else
                  .text-center.bg-gray.border-radius{ style: 'width: 40px; height: 40px;' }
                    %i.fa.fa-question.fa-2x.margin-top-5
              %td
                - if !@task.done?
                  %ul.nav.navbar-nav.navbar-right.margin-right-0
                    = like_button(comment)
                    %li.dropdown
                      %a.padding-5{ type: :button, "data-toggle" => :dropdown, "aria-haspopup" => :false, "aria-expanded" => :false, href: "javascript:;", id: "dropdown-btns-comment-#{comment.id}" }
                        = icon('cog', :class => "dark-grey")
                        %span.caret
                      %ul.dropdown-menu{ "aria-labelledby" => "dropdown-btns-comment-#{comment.id}" }
                        - if comment.thinker == current_thinker && current_thinker.ban(@task.project).nil?
                          = edit_button(comment)
                          - if !@task.in_progress? && comment.reason.nil?
                            = delete_button(comment)
                        - if @task.worker == current_thinker && !@task.deleted?
                          = menu_divider
                          = approve_button(comment)
                .dark-grey
                  %strong
                    = comment.thinker.name
                  %small
                    commented 
                    = time_ago_in_words(comment.created_at)
                    ago
                .form-group{ id: "comment-#{comment.id}" }
                  = markdown(comment.text, true)
