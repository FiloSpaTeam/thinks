-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

= render partial: 'shared/projectbar', locals: { project: @task.project }

.row
  .col-sm-4
    = render partial: 'shared/taskstatuspanel', locals: { task: @task, workload_voted: @workload_voted }
  .col-sm-8
    = render partial: 'shared/taskbody', locals: { task: @task }
    .margin-top-20
      %h4
        Comments
      %ul.list-group
        - if @comments.empty?
          = content_tag(:li, t("no_comments"), :class => "list-group-item")
        - if !@comment_approved.nil? && @comment_approved.reason.present?
          = content_tag(:li, :class => "list-group-item active") do
            %div
              %strong
                = t 'reason'
            = @reason.text
        - @comments.each_with_index do |comment, index|
          = content_tag(:li, :class => "list-group-item #{comment.approved ? 'list-group-item-success' : ''}") do
            - if !@task.done?
              %ul.nav.navbar-nav.navbar-right.margin-right-0
                = like_button(comment)
                %li.dropdown
                  %a.padding-5{ type: :button, "data-toggle" => :dropdown, "aria-haspopup" => :false, "aria-expanded" => :false, href: "javascript:;", id: "dropdown-btns-comment-#{comment.id}" }
                    = icon('gears', :class => "dark-grey fa-lg")
                    %span.caret
                  %ul.dropdown-menu{ "aria-labelledby" => "dropdown-btns-comment-#{comment.id}" }
                    - if comment.thinker == current_thinker && current_thinker.ban(@task.project).nil?
                      = edit_button(comment)
                      - if !@task.in_progress? && comment.reason.nil?
                        = delete_button(comment)
                    - if @task.worker == current_thinker && !@task.deleted?
                      = menu_divider
                      = approve_button(comment)
            .dark-grey
              = link_to("Comment", "#collapseComment#{ comment.id }", "data-toggle" => "collapse")
              by
              %strong
                = comment.thinker.name
            %small
              = comment.created_at.to_s(:long)
            .collapse{ :id => "collapseComment#{ comment.id }", :class => index < 3 ? "in" : ""}
              .form-group
              = markdown(comment.text, true)
      - if @task.project.part_of_team?(current_thinker) && current_thinker.ban(@task.project).nil? && !@task.deleted?
        = render :partial => 'comments/form'
