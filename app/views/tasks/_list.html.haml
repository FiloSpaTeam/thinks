-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

= smart_listing_controls_for :tasks do
  = text_field_tag 'filters[search_title_and_description]', '', :class => 'form-control', autocomplete: 'off'
  = render partial: 'shared/filters', :locals => { :filters => @active_filters }

-# TODO create breadcrumb filters
-#
-# .row
-#   .col-xs-5.col-sm-3.col-xs-offset-7.col-sm-offset-9.text-right
-#     = link_to url_for, remote: true do
-#       %h5
-#         %strong
-#           = t("reset_filters")

.panel-default.margin-top-5
  %table.table.table-condensed.table-hover
    %thead
      %tr
        %td.hidden-xs{ style: 'max-width: 36px;' }
        %td.col-lg-8.col-md-8.col-sm-8.col-xs-9
          .dropdown.col-xs-7.col-sm-3.col-md-3.col-lg-3
            %a#status-dropdown.dropdown-toggle{ :type => "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "true" }
              %h5
                %strong
                  = t "task"
                  = icon('filter')
            = content_tag(:ul, nil, :class => "dropdown-menu", "aria-labelledby" => "status-dropdown") do
              - @statuses.each do |status|
                = content_tag(:li) do
                  = link_to("filters[status_id]" => status, remote: true) do
                    .round-sm.pull-left{ :class => "bg-#{color_list_round_div(status.translation_code)}" }
                    = t("projects.tasks.#{status.translation_code}")
        %td.text-center
          .col-xs-12
            %h5
              %strong
                = smart_listing.sortable 'Workload', :workload
        %td.col-lg-1.col-xs-1.col-sm-1.hidden-xs
          %h5
            %strong
              = smart_listing.sortable 'View', :impressions_count
    %tbody
      - unless smart_listing.empty?
        - smart_listing.collection.each do |task|
          -# - if !@search.empty?
          -#   - tasks = tasks.sort_by{ |task| task.count_occurrences(@search); }.reverse
          %tr
            %td.hidden-xs.vertical-align-middle{ style: 'max-width: 36px;' }
              .round-sm{ :class => "bg-#{color_list_round_div(task.status.translation_code)}", style: "width: 28px; height: 28px;" }
            %td
              .round-sm.pull-left.status-div.visible-xs{ :class => "bg-#{color_list_round_div(task.status.translation_code)}" }
              %strong.hidden-xs.hidden-sm
                %small.dark-grey
                  \##{task.serial}
                  ·
                  = std_deviation_button(task)
                  - unless task.goal.nil?
                    ·
                    = goal_button(task)
                  - if task.children.present?
                    ·
                    = children_button
                ·
                = link_to task.title.truncate(30), task_path(task), :title => task.title
              %strong.visible-xs
                = link_to task.title.truncate(45), task_path(task), :title => task.title
              %strong.visible-sm
                = std_deviation_button(task)
                ·
                = link_to task.title, task_path(task)
              .dark-grey.break-word
                %small
                  %em
                    = highlights_searched_text(plain_text(task.description.squish).truncate(120), @search)
              - if task.deleted?
                .dark-grey.hidden-xs
                  %small
                    closed at
                    %strong
                      = task.deleted_at.to_s(:long)
              - else
                - if task.created_at == task.updated_at
                  .dark-grey
                    %small
                      created at
                      %strong
                        = task.created_at.to_s(:short)
                      by
                      %i
                        #{task.updater.name}
                - else
                  .dark-grey
                    %small
                      updated at
                      %strong
                        = task.updated_at.to_s(:short)
                      by
                      %i
                        #{task.updater.name}
            %td.text-center.workload-table{ style: 'vertical-align: middle;' }
              = workload_description(task)
            %td.text-center.hidden-xs.font-bold{ style: 'vertical-align: middle;' }
              = task.impressions_count
      - else
        %tr.warning
          %td.text-center{ colspan: 3 }
            %strong
              No records found

  = smart_listing.paginate
  = smart_listing.pagination_per_page_links
