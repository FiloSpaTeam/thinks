-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

.panel.panel-default
  .panel-heading
    = smart_listing_controls_for :tasks do
      .input-group{ style: !thinker_signed_in? || current_thinker.ban(@project).present? ? 'display: block;' : '' }
        = text_field_tag 'filters[search_title_and_description]', '', :class => 'form-control', autocomplete: 'off'
        - if thinker_signed_in? && current_thinker.ban(@project).nil?
          .input-group-btn
            = link_to_button(new_project_task_path, "new", "plus")
      = render partial: 'shared/filters', :locals => { :filters => @active_filters }
  .panel-body{ :style => "padding: 0;" }
    %table.table.table-condensed.table-hover
      %thead
        %tr
          %td.col-lg-8.col-md-8.col-sm-8.col-xs-9
            .dropdown.col-xs-7.col-sm-3.col-md-3.col-lg-3
              %a#status-dropdown.dropdown-toggle{ :type => "button", "data-toggle" => "dropdown", "aria-haspopup" => "true", "aria-expanded" => "true" }
                %h5
                  %strong
                    = t "task"
                    %span.caret
              = content_tag(:ul, nil, :class => "dropdown-menu", "aria-labelledby" => "status-dropdown") do
                - @statuses.each do |status|
                  = content_tag(:li) do
                    = link_to("filters[status_id]" => status, remote: true) do
                      .round-sm.pull-left{ :class => "bg-#{color_list_round_div(status.translation_code)}" }
                      = t("projects.tasks.#{status.translation_code}")
          %td.text-center
            .col-xs-12
              %h5
                %strong
                  = smart_listing.sortable 'Workload', :workload
          %td.col-lg-1.col-xs-1.col-sm-1.hidden-xs
      %tbody
        - unless smart_listing.empty?
          - smart_listing.collection.each do |task|
            -# - if !@search.empty?
            -#   - tasks = tasks.sort_by{ |task| task.count_occurrences(@search); }.reverse
            %tr{ :class => color_list_round_div(task.status.translation_code) }
              %td
                %strong.hidden-xs.hidden-sm
                  %small.dark-grey
                    \##{task.serial}
                    Â·
                  = link_to task.title.truncate(30), task_path(task), :title => task.title
                %strong.visible-xs
                  = link_to task.title.truncate(45), task_path(task), :title => task.title
                %strong.visible-sm
                  = link_to task.title, task_path(task)
                .dark-grey
                  %small
                    %em
                      = highlights_searched_text(plain_text(task.description.squish).truncate(120), @search)
                - if task.deleted?
                  .dark-grey.hidden-xs
                    %small
                      closed at
                      %strong
                        = task.deleted_at.to_s(:long)
                - else
                  .dark-grey.hidden-xs
                    %small
                      created at
                      %strong
                        = task.created_at.to_s(:short)
                      by #{task.thinker.name}
                  .dark-grey
                    %small
                      updated at
                      %strong
                        = task.updated_at.to_s(:short)
                      by #{task.updater.name}
              %td.text-center
                .col-xs-12.workload-table
                  = workload_description(task)
              %td.text-right.hidden-xs
                .form-group{ :style => "margin-bottom: 0;" }
                  %a.btn{ :href => "javascript:;", :title => task.standard_deviation, :role => "button" }
                    = icon('bullseye', :class => "dark-grey fa-lg")
                .form-group{ :style => "margin-bottom: 0;" }
                  %a.btn{ :class => task.goal.nil? ? "disabled" : "", :href => task.goal.nil? ? "javascript:;" : goal_path(task.goal), :title => task.goal.nil? ? t("no_goal") : task.goal.title, :role => "button" }
                    = icon('crosshairs', :class => "dark-grey fa-lg")
                - if task.children.present?
                  .form-group{ :style => "margin-bottom: 0;" }
                    %a.btn{ :href => "javascript:;", :title => "This task has children."}
                      = icon('sitemap', :class => "dark-grey fa-lg")
        - else
          %tr.warning
            %td.text-center{ colspan: 3 }
              %strong
                No records found

    = smart_listing.paginate
    = smart_listing.pagination_per_page_links
