-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015,2018 Claudio Maradonna

= render partial: 'shared/filters/layout', locals: { local_filters: [], local_model: :goals, local_text_field_name: 'search_title_and_description' }

%table.table.table-sm#filterrific_results
  %thead
    %tr
      %td
        %strong= t('goals.table.header')
      %td.text-center{ width: 350 }
        %strong= t('goals.table.release')
      %td{ width: 40 }
  %tbody
    - unless smart_listing.empty?
      - smart_listing.collection.each do |goal|
        %tr
          %td
            %strong.d-none.d-md-block
              = link_to goal.title, project_goal_path(@project, goal)
            %strong.d-sm-none
              = link_to goal.title.truncate(50), project_goal_path(@project, goal), :title => goal.title
            %strong.d-none.d-sm-block.d-md-none
              = link_to goal.title, project_goal_path(@project, goal)
            .text-dark.break-word
              %em
                = highlights_searched_text(plain_text(goal.description).truncate(150), @search)
              .progress{ style: 'height: 1.5rem;' }
                .progress-bar{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "#{goal.progress}", :class => "#{progress_bar_color(goal.progress)}", :role => "progressbar", :style => "min-width: 3em; width: #{goal.progress}%;"}
                  = goal.progress
                  \%
          %td.border-left.align-middle
            - if goal.release
              = link_to goal.release.title, project_release_path(@project, goal.release)
              %br
              = plain_text(goal.release.description).truncate(150)
            - else
              = t('goals.no_release')
          %td.border-left.align-middle.dropleft
            %a.btn.dropdown-toggle{ href: '#', role: 'button', "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": 'false', id: "dropdownMenuEdit#{ goal.id }" }
              = icon('fas', 'bars', class: 'fa-sm')
            .dropdown-menu.dropdown-menu-left{ "aria-labelledby": "dropdownMenuEdit#{ goal.id }" }
              = link_to icon('far', 'eye', t('show')), project_goal_path(@project, goal), class: 'dropdown-item small'
              - unless goal.deleted?
                = link_to icon('fas', 'edit', t('edit')), edit_project_goal_path(@project, goal), class: 'dropdown-item small'
                .dropdown-divider
                = link_to link_to icon('fas', 'plus', t('goals.table.add_tasks')), @project.tasks.empty? ? "javascript:;" : new_project_task_path(@project, "goal_id": goal), class: "dropdown-item small #{ @project.tasks.empty? ? 'disabled' : '' }"
                = link_to link_to icon('fas', 'tasks', t('goals.table.open_tasks')), goal.tasks.empty? ? "javascript:;" : project_tasks_path(goal.project, "filters[#{ Enums::FiltersNames::GOAL }]" => goal.id), class: "dropdown-item small #{ goal.tasks.empty? ? 'disabled' : '' }", title: tasks_title(goal), "data-placement": 'left'
              .dropdown-divider
              - if goal.deleted?
                = link_to icon('fas', 'eraser', t('delete')), project_goal_path(@project, goal), :method => 'delete', data: { confirm: t('are_you_sure') }, class: 'dropdown-item small'
              - else
                = link_to icon('fas', 'trash-alt', t('discards')), goal.release.try(:active?) ? 'javascript:;' : project_goal_path(@project, goal), :method => 'delete', data: ({ confirm: t('are_you_sure') } unless goal.release.try(:active?)), class: "dropdown-item small #{ 'disabled' if goal.release.try(:active?) }"
    - else
      %tr.warning
        %td.text-center{ colspan: 3 }
          %strong
            No records found

= smart_listing.paginate
= smart_listing.pagination_per_page_links
