-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

.panel-body.border-bottom
  - if thinker_signed_in?
    %h4.font-bold
      Your contribution
    - if current_thinker != project.thinker
      - ban = current_thinker.ban(project)
      - if ban.present?
        .text-danger
          %strong
            Banned
        %i
          = ban.reason
      - else
        = form_for contribution, url: { controller: :projects, action: :contribute, id: project.id }, html: { id: 'form-contribution' }, method: :put do |f|
          = f.select 'intensity', options_for_select(Contribution.intensities.keys.to_a, contribution.intensity), {}, class: 'form-control', onChange: 'javascript: this.form.submit();'
    - else
      - my_roles = project.assigned_roles.where(thinker: current_thinker).order('team_role_id')
      %ul
        - my_roles.each do |role|
          %li
            = t "team_roles.#{role.team_role.t_name}"
    %hr
  %h4.font-bold
    Project contribution
  %ul
    %li
      = t "projects.contribution_type." + project.contribution_type
  -# .panel-footer
  -#   = link_to t('.my_stats'), project_statistic_path(project, current_thinker), class: 'btn'
.panel-body
  %h4.font-bold
    General details
  .progress
    %div{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "#{project.progress_percentage}", :class => "progress-bar #{progress_bar_color(project.progress_percentage)}", :role => "progressbar", :style => "min-width: 2em; width: #{project.progress_percentage}%;"}
      = project.progress_percentage
      \%
  = t('projects.list.progress')
.list-group
  .list-group-item
    founder
    %strong
      = content_tag :span, project.thinker.name, :class => "pull-right"
    - if project.donate_button.present?
      %hr
      .text-center
        = project.donate_button.html_safe
  .list-group-item
    category
    %strong
      = content_tag :span, project.category.try(:t_name) ? t("category.#{project.category.t_name}") : t('not_defined_yet'), :class => "pull-right"
  .list-group-item
    license
    %strong
      = content_tag :span, project.license.try(:description) ? link_to(project.license.description, project.license.url) : t('not_defined_yet'), :class => "pull-right"
  - if current_thinker == project.thinker
    .list-group-item
      secret
      = link_to 'javascript:;', :class => "pull-right no-padding no-border btn", role: "button", 'data-toggle' => 'popover', 'data-placement' => 'right', 'data-content' => project.serial, 'data-template' => '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content" style="word-wrap: break-word;"></div></div>' do
        = icon('eye', :class => "dark-grey")
.panel-body
  %h4.font-bold
    Sprint details
.list-group
  .list-group-item
    Working period
    %strong
      = content_tag :span, project.cycle.try(:description) ? project.cycle.description : t('not_defined_yet'), :class => "pull-right"
  .list-group-item
    minimum team number
    %strong
      = content_tag :span, project.minimum_team_number, :class => "pull-right"
  .list-group-item
    release date
    %strong
      = content_tag :span, project.release_at.try(:to_s) ? project.release_at.to_s(:long) : t('not_defined_yet'), :class => "pull-right"
.panel-body.border-bottom
  %h4.font-bold
    Skill requirements
  - if project.skills.empty?
    No skill required
  - else
    %ul
      - project.skills.each do |skill|
        %li
          = t("skills.#{skill.t_name}")
.panel-body
  %h4.font-bold
    Links
.list-group
  .list-group-item
    website
    = link_to project.home_url, :class => "pull-right no-padding no-border btn #{!project.home_url.present? ? 'disabled' : ''}", role: "button" do
      = icon('home', :class => "dark-grey")
  .list-group-item
    sources
    = link_to project.source_code_url, :class => "pull-right no-padding no-border btn #{!project.source_code_url.present? ? 'disabled' : ''}", role: "button" do
      = icon('github-alt', :class => "dark-grey")
  .list-group-item
    documentation
    = link_to project.documentation_url, :class => "pull-right no-padding no-border btn #{!project.documentation_url.present? ? 'disabled' : ''}", role: "button" do
      = icon('book', :class => "dark-grey")
  .list-group-item
    mailing list
    = link_to project.mailing_list_url, :class => "pull-right no-padding no-border btn #{!project.mailing_list_url.present? ? 'disabled' : ''}", role: "button" do
      = icon('envelope-o', :class => "dark-grey")
.panel-body
  %h4.font-bold
    Summary
.list-group
  .list-group-item
    - team_number = project.contributions.where('intensity > ?', Contribution.intensities[:watching]).distinct.count
    = badge(team_number)
    = link_to_if team_number.nonzero?, 'team', project_teams_path(project)
  .list-group-item
    = badge(project.releases.size)
    = link_to 'releases', project_releases_path(project)
  .list-group-item
    = badge(project.sprints.size)
    = link_to 'sprints', project_sprints_path(project)
  .list-group-item
    = badge(project.goals.size)
    = link_to 'goals', project_goals_path(project)
  .list-group-item
    = badge(project.tasks.size)
    = link_to 'tasks', project_tasks_path(project)
