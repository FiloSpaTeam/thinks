- if thinker_signed_in?
  .panel.panel-default
    .panel-body
      %strong
        Your contribution
    .list-group
      .list-group-item
        - if current_thinker != project.thinker
          = form_for contribution, url: { action: :contribute }, html: { id: 'form-contribution' }, method: :put do |f|
            = f.select 'intensity', options_for_select(Contribution.intensities.keys.to_a, contribution.intensity), {}, class: 'form-control', onChange: 'javascript: this.form.submit();'
        - else
          You are the Scrum Master
.panel.panel-default
  .panel-body
    %strong
      Project
    .progress
      %div{"aria-valuemax" => "100", "aria-valuemin" => "0", "aria-valuenow" => "#{project.progress_percentage}", :class => "progress-bar #{progress_bar_color(project.progress_percentage)}", :role => "progressbar", :style => "min-width: 2em; width: #{project.progress_percentage}%;"}
        = project.progress_percentage
        \%
    = t('projects.list.progress')
  .list-group
    .list-group-item
      founder
      %strong
        = content_tag :span, project.thinker.name, :class => "pull-right"
    .list-group-item.hidden-xs
      category
      %strong
        = content_tag :span, project.category.try(:t_name) ? t("category.#{project.category.t_name}") : t('not_defined_yet'), :class => "pull-right"
    .list-group-item.hidden-xs
      license
      %strong
        = content_tag :span, project.license.try(:description) ? project.license.description : t('not_defined_yet'), :class => "pull-right"
    .list-group-item.hidden-xs
      sprint every
      %strong
        = content_tag :span, project.cycle.try(:description) ? project.cycle.description : t('not_defined_yet'), :class => "pull-right"
    .list-group-item.hidden-xs
      minimum team number
      %strong
        = content_tag :span, project.minimum_team_number, :class => "pull-right"
    .list-group-item.hidden-xs
      release date
      %strong
        = content_tag :span, project.release_at.try(:to_s) ? project.release_at.to_s(:long) : t('not_defined_yet'), :class => "pull-right"
  .panel-body.hidden-xs
    %strong
      URLs
  .list-group.hidden-xs
    .list-group-item
      = link_to project.home_url, :class => "pull-right no-padding no-border btn #{!project.home_url.present? ? 'disabled' : ''}", role: "button" do
        = icon('home', :class => "dark-grey")
      website
    .list-group-item
      sources
      = link_to project.source_code_url, :class => "pull-right no-padding no-border btn #{!project.source_code_url.present? ? 'disabled' : ''}", role: "button" do
        = icon('github-alt', :class => "dark-grey")
    .list-group-item
      documentation
      = link_to project.documentation_url, :class => "pull-right no-padding no-border btn #{!project.documentation_url.present? ? 'disabled' : ''}", role: "button" do
        = icon('book', :class => "dark-grey")
  .panel-body.hidden-xs
    %strong
      Summary
  .list-group.hidden-xs
    .list-group-item
      = badge(project.contributions.distinct.select{ |contribution| !contribution.nothing? }.size)
      thinkers
    .list-group-item
      = badge(project.contributions.distinct.select{ |contribution| contribution.partecipate? }.size)
      workers
    .list-group-item
      = badge(project.sprints.size)
      sprints
    .list-group-item
      = badge(project.goals.size)
      goals
    .list-group-item
      = badge(project.tasks.size)
      tasks
