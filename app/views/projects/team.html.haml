-# This file is part of Thinks.

-# Thinks is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero Public License as published by
-# the Free Software Foundation, either version 3 of the License, or
-# (at your option) any later version.

-# Thinks is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero Public License for more details.

-# You should have received a copy of the GNU Affero Public License
-# along with Thinks.  If not, see <http://www.gnu.org/licenses/>.

-# Copyright (c) 2015, Claudio Maradonna

- model_class = Project
= render :partial => 'shared/projectbar', locals: { project: @project }
.row
  .col-md-4
    .panel.panel-default
      = render :partial => 'projectsummary', locals: { project: @project, contribution: @contribution }
  .col-md-8
    .panel.panel-default
      %ul.list-group
        - @thinkers.each do |thinker|
          %li.list-group-item
            %a{ :role => "button", "data-toggle" => "collapse", "aria-expanded" => "false", "aria-controls" => "collapseThinker#{ thinker.id }", :href => "#collapseThinker#{ thinker.id }" }
              %strong
                = thinker.name
            - if thinker.avatar
              = cl_image_tag(thinker.avatar.path, { size: '30x30', class: 'pull-left team-member-img' })
            - else
              %img.team-member-img.pull-left{ "data-src" => "holder.js/30x30" }
            .pull-right
              Total workload:
              - working_tasks = thinker.working_tasks.where(project: @project).where(status: Status.done.first)
              = working_tasks.sum(:workload)
            .collapse{ id: "collapseThinker#{ thinker.id }", style: "margin-top: 20px; margin-bottom: 0px;" }
              - if working_tasks.size.nonzero?
                %ul.list-group
                  - working_tasks.order('workload desc').order('updated_at desc').limit(5).each do |task|
                    %li.list-group-item
                      = "##{ task.serial }"
                      = link_to task.title, task, :title => task.updated_at.to_s(:short)
                      = badge(task.workload)
              - else
                %strong
                  No tasks done
